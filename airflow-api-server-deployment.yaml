---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-api-server
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-api-server
  template:
    metadata:
      labels:
        app: airflow-api-server
    spec:
      serviceAccountName: airflow
      containers:
      - name: api-server
        image: apache/airflow:3.1.0
        command: ["airflow", "api-server"]
        ports:
        - containerPort: 8080
          name: http

        env:
          # üîê FERNET Key (desde Secret principal)
          - name: AIRFLOW__CORE__FERNET_KEY
            valueFrom:
              secretKeyRef:
                name: airflow-fernet-key-secrets
                key: AIRFLOW__CORE__FERNET_KEY

          # üîê Redis password (desde Secret dedicado)
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: airflow-redis-password
                key: redis-password 

          - name: AIRFLOW__API__SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: airflow-secret-key-secrets
                key: AIRFLOW__API__SECRET_KEY
                
          - name: AIRFLOW__API_AUTH__JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: airflow-secret-key-secrets
                key: AIRFLOW__API_AUTH__JWT_SECRET

          # üß† Celery broker con autenticaci√≥n Redis
          - name: AIRFLOW__CELERY__BROKER_URL
            value: "redis://:$(REDIS_PASSWORD)@airflow-redis:6379/0"

        envFrom:
        - configMapRef:
            name: airflow-config
        - secretRef:
            name: airflow-postgres-secrets

        livenessProbe:
          httpGet:
            path: /v1/api/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5

        readinessProbe:
          httpGet:
            path: /v1/api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 5


        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "1000m"
